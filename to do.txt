
-- new list (2018) --

possible announcement for the Shader Superfights Heavyweight GP 2019!

for now:
- optimize map blitter & try to get it OpenMP-compatible as a way to test it with Shadertoy ports too
- create textured mapped version of map blitter
- add some tricks to map blitter, like interlacing
- bring new optimizations over to cspan() and bsamp32() (packing instructions)
- fix OpenMP parallel loops (test on x86)
- if that's done: try Nautilus

to do w/priority:
- garbage collect resources (and eradicate a ton of repetitive shit)
- create sampling functions that don't require a prepare call first?
- implement: Heartquake water

- verify: does your Std3DMath class inline correctly?
  answer: seems like mostly, though I added some Win32 __forceinline here and there to help it along

to do:
- *parametrize* all relevant values so they can be Rocket-controlled (including map constants et cetera)
- generic crash handler
- application icon
- SDL offers enough tools to create a configuration dialog

remember:
- it's very possible to optimize cspan() to handle 4-pixels-at-once cases, but right now there's no priority
- Audio_Rocket_Sync() now assumes 64 rows in a pattern
- blur bias flaw (invisible, but it's there)

effect ideas:
- #1) create a ripple blitter (https://www.shadertoy.com/view/ldSSD1 looks nice!), and more of these!
- #2) create a framework (class) that makes it very easy to port and thread Shadertoy/GLSL
- #3) scaling routines
- #4) particles, requested by Nytrik (ask him what he likes best)
- #5) VHS distortion?
- true 3D

OSX/Linux build:
- switch module player
- CMake?

when out of ideas: optimize + FIXMEs
